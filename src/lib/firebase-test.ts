import { db } from './firebase';
import { doc, setDoc, getDoc, collection, addDoc } from 'firebase/firestore';

export async function testFirebaseConnection() {
  console.log('🧪 Testing Firebase connection...');

  if (!db) {
    console.error('❌ Database not initialized');
    return false;
  }

  try {
    // Test 1: Simple document write
    const testDoc = {
      test: true,
      timestamp: new Date().toISOString(),
      message: 'Firebase test successful'
    };

    console.log('📝 Testing document write...');
    await setDoc(doc(db, 'test', 'connection-test'), testDoc);
    console.log('✅ Document write successful');

    // Test 2: Document read
    console.log('📖 Testing document read...');
    const docSnap = await getDoc(doc(db, 'test', 'connection-test'));
    if (docSnap.exists()) {
      console.log('✅ Document read successful:', docSnap.data());
    } else {
      console.log('❌ Document not found');
      return false;
    }

    // Test 3: Collection add (auto-generated ID)
    console.log('📝 Testing collection add...');
    const docRef = await addDoc(collection(db, 'test-collection'), {
      autoGenerated: true,
      timestamp: new Date().toISOString()
    });
    console.log('✅ Collection add successful, ID:', docRef.id);

    console.log('🎉 All Firebase tests passed!');
    return true;

  } catch (error) {
    console.error('❌ Firebase test failed:', error);

    // Check if it's a permission error
    if (error instanceof Error) {
      if (error.message.includes('permission-denied')) {
        console.error('🚫 Permission denied - check Firestore security rules');
        console.error('💡 You may need to update security rules to allow read/write');
      }
      if (error.message.includes('network')) {
        console.error('🌐 Network error - check internet connection');
      }
    }

    return false;
  }
}

// Test specific collections
export async function testCollectionOperations() {
  if (!db) return false;

  try {
    console.log('🧪 Testing collection operations...');

    // Test buses collection
    console.log('🚌 Testing buses collection...');
    const busData = {
      plateNumber: 'TEST-001',
      capacity: 50,
      status: 'active',
      createdAt: new Date().toISOString()
    };

    await setDoc(doc(db, 'buses', 'test-bus'), busData);
    console.log('✅ Bus collection test passed');

    // Test bookings collection
    console.log('🎫 Testing bookings collection...');
    const bookingData = {
      busId: 'test-bus',
      passengerName: 'Test User',
      seatNumber: '1A',
      status: 'confirmed',
      createdAt: new Date().toISOString()
    };

    const bookingRef = await addDoc(collection(db, 'bookings'), bookingData);
    console.log('✅ Booking collection test passed, ID:', bookingRef.id);

    return true;
  } catch (error) {
    console.error('❌ Collection operations test failed:', error);
    return false;
  }
}

// Initialize test (run once on app start)
export async function initFirebaseTest() {
  if (typeof window === 'undefined') return; // Only run on client side

  console.log('🔥 Initializing Firebase connectivity test...');

  setTimeout(async () => {
    const connectionTest = await testFirebaseConnection();
    if (connectionTest) {
      await testCollectionOperations();
    }
  }, 2000); // Wait 2 seconds for Firebase to fully initialize
}