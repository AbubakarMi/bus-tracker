{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Documents/DevFlux/bus-tracker/src/ai/flows/real-time-eta-prediction.ts"],"sourcesContent":["// src/ai/flows/real-time-eta-prediction.ts\r\n'use server';\r\n\r\n/**\r\n * @fileOverview A real-time ETA prediction AI agent.\r\n *\r\n * - predictRealTimeETA - A function that handles the real-time ETA prediction process.\r\n * - RealTimeETAPredictionInput - The input type for the predictRealTimeETA function.\r\n * - RealTimeETAPredictionOutput - The return type for the predictRealTimeETA function.\r\n */\r\n\r\nimport {ai} from '@/ai/genkit';\r\nimport {z} from 'genkit';\r\n\r\nconst RealTimeETAPredictionInputSchema = z.object({\r\n  busLocation: z\r\n    .object({\r\n      latitude: z.number().describe('The latitude of the bus.'),\r\n      longitude: z.number().describe('The longitude of the bus.'),\r\n      timestamp: z.number().describe('The timestamp of the bus location.'),\r\n    })\r\n    .describe('The current location of the bus.'),\r\n  studentStop: z\r\n    .object({\r\n      latitude: z.number().describe('The latitude of the student stop.'),\r\n      longitude: z.number().describe('The longitude of the student stop.'),\r\n    })\r\n    .describe('The location of the student stop.'),\r\n  routeData: z.string().describe('The route data including distance to the stop.'),\r\n  historicalTrafficData: z\r\n    .string()\r\n    .describe('Historical traffic data for the route and time of day.'),\r\n});\r\nexport type RealTimeETAPredictionInput = z.infer<typeof RealTimeETAPredictionInputSchema>;\r\n\r\nconst RealTimeETAPredictionOutputSchema = z.object({\r\n  estimatedArrivalTime: z.string().describe('The estimated time of arrival at the student stop.'),\r\n  confidence: z\r\n    .number()\r\n    .min(0)\r\n    .max(1)\r\n    .describe('The confidence level of the ETA prediction (0 to 1).'),\r\n  explanation: z.string().describe('Explanation of factors affecting ETA.'),\r\n});\r\nexport type RealTimeETAPredictionOutput = z.infer<typeof RealTimeETAPredictionOutputSchema>;\r\n\r\nexport async function predictRealTimeETA(\r\n  input: RealTimeETAPredictionInput\r\n): Promise<RealTimeETAPredictionOutput> {\r\n  return realTimeETAPredictionFlow(input);\r\n}\r\n\r\nconst prompt = ai.definePrompt({\r\n  name: 'realTimeETAPredictionPrompt',\r\n  input: {schema: RealTimeETAPredictionInputSchema},\r\n  output: {schema: RealTimeETAPredictionOutputSchema},\r\n  prompt: `You are a real-time ETA prediction expert. You will receive the current\r\n  bus location, the student's stop location, route data, and historical traffic\r\n  data. Use this information to estimate the arrival time at the student's stop.\r\n\r\n  Bus Location: Latitude: {{{busLocation.latitude}}}, Longitude:\r\n  {{{busLocation.longitude}}}, Timestamp: {{{busLocation.timestamp}}}\r\n  Student Stop: Latitude: {{{studentStop.latitude}}}, Longitude:\r\n  {{{studentStop.longitude}}}\r\n  Route Data: {{{routeData}}}\r\n  Historical Traffic Data: {{{historicalTrafficData}}}\r\n\r\n  Provide the estimated arrival time, a confidence level (0 to 1), and an\r\n  explanation of the factors affecting the ETA.\r\n\r\n  Ensure the estimatedArrivalTime is in ISO 8601 format.\r\n  `,\r\n});\r\n\r\nconst realTimeETAPredictionFlow = ai.defineFlow(\r\n  {\r\n    name: 'realTimeETAPredictionFlow',\r\n    inputSchema: RealTimeETAPredictionInputSchema,\r\n    outputSchema: RealTimeETAPredictionOutputSchema,\r\n  },\r\n  async input => {\r\n    const {output} = await prompt(input);\r\n    return output!;\r\n  }\r\n);\r\n"],"names":[],"mappings":";;;;;;IA8CsB,qBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Documents/DevFlux/bus-tracker/src/lib/hooks/use-mock-bus-location.ts"],"sourcesContent":["'use client';\r\nimport { useState, useEffect } from 'react';\r\n\r\ntype LatLng = { lat: number; lng: number };\r\n\r\nexport function useMockBusLocation(initialPosition: LatLng, speed = 0.0001) {\r\n  const [position, setPosition] = useState<LatLng>(initialPosition);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setPosition((prevPosition) => {\r\n        // Simple movement logic: move northeast\r\n        return {\r\n          lat: prevPosition.lat + speed / 2,\r\n          lng: prevPosition.lng + speed,\r\n        };\r\n      });\r\n    }, 2000); // Update every 2 seconds\r\n\r\n    return () => clearInterval(interval);\r\n  }, [speed]);\r\n\r\n  return position;\r\n}\r\n"],"names":[],"mappings":";;;AACA;AADA;;AAKO,SAAS,mBAAmB,eAAuB,EAAE,QAAQ,MAAM;IACxE,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAEjD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,WAAW,YAAY;YAC3B,YAAY,CAAC;gBACX,wCAAwC;gBACxC,OAAO;oBACL,KAAK,aAAa,GAAG,GAAG,QAAQ;oBAChC,KAAK,aAAa,GAAG,GAAG;gBAC1B;YACF;QACF,GAAG,OAAO,yBAAyB;QAEnC,OAAO,IAAM,cAAc;IAC7B,GAAG;QAAC;KAAM;IAEV,OAAO;AACT","debugId":null}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Documents/DevFlux/bus-tracker/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Documents/DevFlux/bus-tracker/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst labelVariants = cva(\r\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n)\r\n\r\nconst Label = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\r\n    VariantProps<typeof labelVariants>\r\n>(({ className, ...props }, ref) => (\r\n  <LabelPrimitive.Root\r\n    ref={ref}\r\n    className={cn(labelVariants(), className)}\r\n    {...props}\r\n  />\r\n))\r\nLabel.displayName = LabelPrimitive.Root.displayName\r\n\r\nexport { Label }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 163, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Documents/DevFlux/bus-tracker/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport {\r\n  Controller,\r\n  FormProvider,\r\n  useFormContext,\r\n  type ControllerProps,\r\n  type FieldPath,\r\n  type FieldValues,\r\n} from \"react-hook-form\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Label } from \"@/components/ui/label\"\r\n\r\nconst Form = FormProvider\r\n\r\ntype FormFieldContextValue<\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\r\n> = {\r\n  name: TName\r\n}\r\n\r\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\r\n  {} as FormFieldContextValue\r\n)\r\n\r\nconst FormField = <\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\r\n>({\r\n  ...props\r\n}: ControllerProps<TFieldValues, TName>) => {\r\n  return (\r\n    <FormFieldContext.Provider value={{ name: props.name }}>\r\n      <Controller {...props} />\r\n    </FormFieldContext.Provider>\r\n  )\r\n}\r\n\r\nconst useFormField = () => {\r\n  const fieldContext = React.useContext(FormFieldContext)\r\n  const itemContext = React.useContext(FormItemContext)\r\n  const { getFieldState, formState } = useFormContext()\r\n\r\n  const fieldState = getFieldState(fieldContext.name, formState)\r\n\r\n  if (!fieldContext) {\r\n    throw new Error(\"useFormField should be used within <FormField>\")\r\n  }\r\n\r\n  const { id } = itemContext\r\n\r\n  return {\r\n    id,\r\n    name: fieldContext.name,\r\n    formItemId: `${id}-form-item`,\r\n    formDescriptionId: `${id}-form-item-description`,\r\n    formMessageId: `${id}-form-item-message`,\r\n    ...fieldState,\r\n  }\r\n}\r\n\r\ntype FormItemContextValue = {\r\n  id: string\r\n}\r\n\r\nconst FormItemContext = React.createContext<FormItemContextValue>(\r\n  {} as FormItemContextValue\r\n)\r\n\r\nconst FormItem = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => {\r\n  const id = React.useId()\r\n\r\n  return (\r\n    <FormItemContext.Provider value={{ id }}>\r\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\r\n    </FormItemContext.Provider>\r\n  )\r\n})\r\nFormItem.displayName = \"FormItem\"\r\n\r\nconst FormLabel = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\r\n>(({ className, ...props }, ref) => {\r\n  const { error, formItemId } = useFormField()\r\n\r\n  return (\r\n    <Label\r\n      ref={ref}\r\n      className={cn(error && \"text-destructive\", className)}\r\n      htmlFor={formItemId}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nFormLabel.displayName = \"FormLabel\"\r\n\r\nconst FormControl = React.forwardRef<\r\n  React.ElementRef<typeof Slot>,\r\n  React.ComponentPropsWithoutRef<typeof Slot>\r\n>(({ ...props }, ref) => {\r\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\r\n\r\n  return (\r\n    <Slot\r\n      ref={ref}\r\n      id={formItemId}\r\n      aria-describedby={\r\n        !error\r\n          ? `${formDescriptionId}`\r\n          : `${formDescriptionId} ${formMessageId}`\r\n      }\r\n      aria-invalid={!!error}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nFormControl.displayName = \"FormControl\"\r\n\r\nconst FormDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => {\r\n  const { formDescriptionId } = useFormField()\r\n\r\n  return (\r\n    <p\r\n      ref={ref}\r\n      id={formDescriptionId}\r\n      className={cn(\"text-sm text-muted-foreground\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nFormDescription.displayName = \"FormDescription\"\r\n\r\nconst FormMessage = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, children, ...props }, ref) => {\r\n  const { error, formMessageId } = useFormField()\r\n  const body = error ? String(error?.message ?? \"\") : children\r\n\r\n  if (!body) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <p\r\n      ref={ref}\r\n      id={formMessageId}\r\n      className={cn(\"text-sm font-medium text-destructive\", className)}\r\n      {...props}\r\n    >\r\n      {body}\r\n    </p>\r\n  )\r\n})\r\nFormMessage.displayName = \"FormMessage\"\r\n\r\nexport {\r\n  useFormField,\r\n  Form,\r\n  FormItem,\r\n  FormLabel,\r\n  FormControl,\r\n  FormDescription,\r\n  FormMessage,\r\n  FormField,\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 316, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Documents/DevFlux/bus-tracker/src/components/student/bus-tracker.tsx"],"sourcesContent":["\r\n'use client';\r\n\r\nimport * as React from 'react';\r\nimport { Map, AdvancedMarker, useMap } from '@vis.gl/react-google-maps';\r\nimport { zodResolver } from '@hookform/resolvers/zod';\r\nimport { useForm } from 'react-hook-form';\r\nimport { z } from 'zod';\r\n\r\nimport { predictRealTimeETA, type RealTimeETAPredictionOutput } from '@/ai/flows/real-time-eta-prediction';\r\nimport { useMockBusLocation } from '@/lib/hooks/use-mock-bus-location';\r\nimport { MapPlaceholder } from '@/components/map-placeholder';\r\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\r\nimport { Input } from '@/components/ui/input';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { Loader2, Clock, Zap, FileText } from 'lucide-react';\r\nimport { Separator } from '../ui/separator';\r\n\r\nconst etaFormSchema = z.object({\r\n  stopLatitude: z.coerce.number().min(-90).max(90),\r\n  stopLongitude: z.coerce.number().min(-180).max(180),\r\n});\r\n\r\nfunction MapUpdater({ position }: { position: { lat: number; lng: number } }) {\r\n    const map = useMap();\r\n    React.useEffect(() => {\r\n        if (map && position) {\r\n            map.panTo(position);\r\n        }\r\n    }, [map, position]);\r\n    return null;\r\n}\r\n\r\nexport function BusTracker() {\r\n  const busPosition = useMockBusLocation({ lat: 34.0522, lng: -118.2437 });\r\n  const [etaResult, setEtaResult] = React.useState<RealTimeETAPredictionOutput | null>(null);\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n  const { toast } = useToast();\r\n\r\n  const form = useForm<z.infer<typeof etaFormSchema>>({\r\n    resolver: zodResolver(etaFormSchema),\r\n    defaultValues: {\r\n      stopLatitude: 34.06,\r\n      stopLongitude: -118.25,\r\n    },\r\n  });\r\n\r\n  async function onSubmit(values: z.infer<typeof etaFormSchema>) {\r\n    setIsLoading(true);\r\n    setEtaResult(null);\r\n    try {\r\n      const result = await predictRealTimeETA({\r\n        busLocation: {\r\n          latitude: busPosition.lat,\r\n          longitude: busPosition.lng,\r\n          timestamp: Date.now(),\r\n        },\r\n        studentStop: {\r\n          latitude: values.stopLatitude,\r\n          longitude: values.stopLongitude,\r\n        },\r\n        routeData: 'Route 51, distance to stop: 2.5km, 3 stops remaining.',\r\n        historicalTrafficData: 'Moderate traffic expected on this route at this time of day.',\r\n      });\r\n      setEtaResult(result);\r\n    } catch (error) {\r\n      console.error('Error predicting ETA:', error);\r\n      toast({\r\n        variant: 'destructive',\r\n        title: 'Error',\r\n        description: 'Failed to predict ETA. Please try again.',\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"grid gap-6 lg:grid-cols-3\">\r\n      <div className=\"lg:col-span-2\">\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Live Map</CardTitle>\r\n            <CardDescription>Bus location updates in real-time.</CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"h-[500px] w-full overflow-hidden rounded-md border\">\r\n              <Map\r\n                defaultCenter={busPosition}\r\n                defaultZoom={13}\r\n                gestureHandling={'greedy'}\r\n                disableDefaultUI={true}\r\n                mapId=\"bus_tracker_map\"\r\n              >\r\n                <AdvancedMarker position={busPosition} title=\"Your Bus\" />\r\n                <MapUpdater position={busPosition} />\r\n              </Map>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n      <div>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>ETA Prediction</CardTitle>\r\n            <CardDescription>Get an AI-powered ETA to your stop.</CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <Form {...form}>\r\n              <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\r\n                <FormField\r\n                  control={form.control}\r\n                  name=\"stopLatitude\"\r\n                  render={({ field }) => (\r\n                    <FormItem>\r\n                      <FormLabel>Stop Latitude</FormLabel>\r\n                      <FormControl>\r\n                        <Input type=\"number\" step=\"0.0001\" {...field} />\r\n                      </FormControl>\r\n                      <FormMessage />\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n                <FormField\r\n                  control={form.control}\r\n                  name=\"stopLongitude\"\r\n                  render={({ field }) => (\r\n                    <FormItem>\r\n                      <FormLabel>Stop Longitude</FormLabel>\r\n                      <FormControl>\r\n                        <Input type=\"number\" step=\"0.0001\" {...field} />\r\n                      </FormControl>\r\n                      <FormMessage />\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n                <Button type=\"submit\" className=\"w-full\" disabled={isLoading}>\r\n                  {isLoading && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\r\n                  Predict ETA\r\n                </Button>\r\n              </form>\r\n            </Form>\r\n            \r\n            {(isLoading || etaResult) && <Separator className=\"my-6\" />}\r\n\r\n            {isLoading && (\r\n              <div className=\"text-center text-muted-foreground\">\r\n                <p>Generating prediction...</p>\r\n              </div>\r\n            )}\r\n            {etaResult && (\r\n              <div className=\"space-y-4 text-sm\">\r\n                <div className=\"flex items-start gap-3\">\r\n                  <Clock className=\"h-5 w-5 flex-shrink-0 text-primary\" />\r\n                  <div>\r\n                    <p className=\"font-semibold text-foreground\">Estimated Arrival Time</p>\r\n                    <p className=\"text-muted-foreground\">{new Date(etaResult.estimatedArrivalTime).toLocaleTimeString()}</p>\r\n                  </div>\r\n                </div>\r\n                 <div className=\"flex items-start gap-3\">\r\n                  <Zap className=\"h-5 w-5 flex-shrink-0 text-primary\" />\r\n                  <div>\r\n                    <p className=\"font-semibold text-foreground\">Confidence</p>\r\n                    <p className=\"text-muted-foreground\">{(etaResult.confidence * 100).toFixed(0)}%</p>\r\n                  </div>\r\n                </div>\r\n                 <div className=\"flex items-start gap-3\">\r\n                  <FileText className=\"h-5 w-5 flex-shrink-0 text-primary\" />\r\n                  <div>\r\n                    <p className=\"font-semibold text-foreground\">Analysis</p>\r\n                    <p className=\"text-muted-foreground\">{etaResult.explanation}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 826, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Documents/DevFlux/bus-tracker/src/components/map-placeholder.tsx"],"sourcesContent":["import { MapIcon } from 'lucide-react';\r\n\r\nexport function MapPlaceholder() {\r\n  return (\r\n    <div className=\"flex h-full w-full flex-col items-center justify-center bg-muted\">\r\n      <div className=\"text-center\">\r\n        <MapIcon className=\"mx-auto h-12 w-12 text-muted-foreground\" />\r\n        <h3 className=\"mt-4 text-lg font-medium text-foreground\">Map Unavailable</h3>\r\n        <p className=\"mt-1 text-sm text-muted-foreground\">\r\n          Please provide a Google Maps API key in your environment variables.\r\n        </p>\r\n        <code className=\"mt-4 inline-block rounded bg-background px-2 py-1 text-sm font-mono\">\r\n          NEXT_PUBLIC_GOOGLE_MAPS_API_KEY=...\r\n        </code>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,SAAS;IACd,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC,oMAAA,CAAA,UAAO;oBAAC,WAAU;;;;;;8BACnB,8OAAC;oBAAG,WAAU;8BAA2C;;;;;;8BACzD,8OAAC;oBAAE,WAAU;8BAAqC;;;;;;8BAGlD,8OAAC;oBAAK,WAAU;8BAAsE;;;;;;;;;;;;;;;;;AAM9F","debugId":null}},
    {"offset": {"line": 888, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Documents/DevFlux/bus-tracker/src/app/dashboard/student/track/page.tsx"],"sourcesContent":["\r\n'use client';\r\n\r\nimport { BusTracker } from '@/components/student/bus-tracker';\r\nimport { APIProvider } from '@vis.gl/react-google-maps';\r\nimport { MapPlaceholder } from '@/components/map-placeholder';\r\n\r\nexport default function TrackBusPage() {\r\n  const apiKey = process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY;\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <h1 className=\"text-3xl font-bold font-headline\">Real-Time Bus Tracking</h1>\r\n      <p className=\"text-muted-foreground\">\r\n        Select a route to see the live location of your bus and its estimated time of arrival.\r\n      </p>\r\n      {apiKey ? (\r\n        <APIProvider apiKey={apiKey}>\r\n          <BusTracker />\r\n        </APIProvider>\r\n      ) : (\r\n        <div className=\"grid gap-6 lg:grid-cols-3\">\r\n          <div className=\"lg:col-span-2\">\r\n            <div className=\"h-[500px] w-full overflow-hidden rounded-md border\">\r\n              <MapPlaceholder />\r\n            </div>\r\n          </div>\r\n          <div className=\"lg:col-span-1\">\r\n             {/* You might want a placeholder for the ETA card as well */}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AAJA;;;;;AAMe,SAAS;IACtB,MAAM;IAEN,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAmC;;;;;;0BACjD,8OAAC;gBAAE,WAAU;0BAAwB;;;;;;YAGpC,qDACC,8OAAC,kLAAA,CAAA,cAAW;gBAAC,QAAQ;0BACnB,cAAA,8OAAC,+IAAA,CAAA,aAAU;;;;;;;;;;;;;;;;AAgBrB","debugId":null}}]
}