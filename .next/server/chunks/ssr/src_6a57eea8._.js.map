{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Documents/DevFlux/bus-tracker/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Documents/DevFlux/bus-tracker/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst badgeVariants = cva(\r\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\r\n        secondary:\r\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        destructive:\r\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\r\n        outline: \"text-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface BadgeProps\r\n  extends React.HTMLAttributes<HTMLDivElement>,\r\n    VariantProps<typeof badgeVariants> {}\r\n\r\nfunction Badge({ className, variant, ...props }: BadgeProps) {\r\n  return (\r\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\r\n  )\r\n}\r\n\r\nexport { Badge, badgeVariants }\r\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Documents/DevFlux/bus-tracker/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst labelVariants = cva(\r\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n)\r\n\r\nconst Label = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\r\n    VariantProps<typeof labelVariants>\r\n>(({ className, ...props }, ref) => (\r\n  <LabelPrimitive.Root\r\n    ref={ref}\r\n    className={cn(labelVariants(), className)}\r\n    {...props}\r\n  />\r\n))\r\nLabel.displayName = LabelPrimitive.Root.displayName\r\n\r\nexport { Label }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Documents/DevFlux/bus-tracker/src/components/ui/calendar.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\r\nimport { DayPicker } from \"react-day-picker\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { buttonVariants } from \"@/components/ui/button\"\r\n\r\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\r\n\r\nfunction Calendar({\r\n  className,\r\n  classNames,\r\n  showOutsideDays = true,\r\n  ...props\r\n}: CalendarProps) {\r\n  return (\r\n    <DayPicker\r\n      showOutsideDays={showOutsideDays}\r\n      className={cn(\"p-3\", className)}\r\n      classNames={{\r\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\r\n        month: \"space-y-4\",\r\n        caption: \"flex justify-center pt-1 relative items-center\",\r\n        caption_label: \"text-sm font-medium\",\r\n        nav: \"space-x-1 flex items-center\",\r\n        nav_button: cn(\r\n          buttonVariants({ variant: \"outline\" }),\r\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\r\n        ),\r\n        nav_button_previous: \"absolute left-1\",\r\n        nav_button_next: \"absolute right-1\",\r\n        table: \"w-full border-collapse space-y-1\",\r\n        head_row: \"flex\",\r\n        head_cell:\r\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\r\n        row: \"flex w-full mt-2\",\r\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\r\n        day: cn(\r\n          buttonVariants({ variant: \"ghost\" }),\r\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\r\n        ),\r\n        day_range_end: \"day-range-end\",\r\n        day_selected:\r\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\r\n        day_today: \"bg-accent text-accent-foreground\",\r\n        day_outside:\r\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\r\n        day_disabled: \"text-muted-foreground opacity-50\",\r\n        day_range_middle:\r\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\r\n        day_hidden: \"invisible\",\r\n        ...classNames,\r\n      }}\r\n      components={{\r\n        IconLeft: ({ className, ...props }) => (\r\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\r\n        ),\r\n        IconRight: ({ className, ...props }) => (\r\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\r\n        ),\r\n      }}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\nCalendar.displayName = \"Calendar\"\r\n\r\nexport { Calendar }\r\n"],"names":[],"mappings":";;;;AAGA;AAAA;AACA;AAEA;AACA;AAPA;;;;;;AAWA,SAAS,SAAS,EAChB,SAAS,EACT,UAAU,EACV,kBAAkB,IAAI,EACtB,GAAG,OACW;IACd,qBACE,8OAAC,8JAAA,CAAA,YAAS;QACR,iBAAiB;QACjB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,OAAO;QACrB,YAAY;YACV,QAAQ;YACR,OAAO;YACP,SAAS;YACT,eAAe;YACf,KAAK;YACL,YAAY,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACX,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAU,IACpC;YAEF,qBAAqB;YACrB,iBAAiB;YACjB,OAAO;YACP,UAAU;YACV,WACE;YACF,KAAK;YACL,MAAM;YACN,KAAK,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACJ,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAQ,IAClC;YAEF,eAAe;YACf,cACE;YACF,WAAW;YACX,aACE;YACF,cAAc;YACd,kBACE;YACF,YAAY;YACZ,GAAG,UAAU;QACf;QACA,YAAY;YACV,UAAU,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBAChC,8OAAC,oNAAA,CAAA,cAAW;oBAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;YAE7D,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBACjC,8OAAC,sNAAA,CAAA,eAAY;oBAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;QAEhE;QACC,GAAG,KAAK;;;;;;AAGf;AACA,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 242, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Documents/DevFlux/bus-tracker/src/app/student/book/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Calendar } from '@/components/ui/calendar';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport Link from 'next/link';\r\nimport {\r\n  Calendar as CalendarIcon,\r\n  Clock,\r\n  MapPin,\r\n  Bus,\r\n  ArrowRight,\r\n  CheckCircle2,\r\n  User,\r\n  Mail,\r\n  Phone,\r\n  ArrowLeft,\r\n  Users\r\n} from 'lucide-react';\r\nimport { format } from 'date-fns';\r\n\r\nconst routes = [\r\n  {\r\n    id: 1,\r\n    name: \"Lagos Express\",\r\n    from: \"Lagos (Ojuelegba)\",\r\n    to: \"Abuja (Berger)\",\r\n    duration: \"6 hrs\",\r\n    price: 5500,\r\n    times: [\"6:00 AM\", \"8:00 AM\", \"12:00 PM\", \"4:00 PM\"],\r\n    availability: { \"6:00 AM\": 8, \"8:00 AM\": 3, \"12:00 PM\": 12, \"4:00 PM\": 15 }\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Campus Shuttle\",\r\n    from: \"UI Main Gate\",\r\n    to: \"Student Hostels\", \r\n    duration: \"25 mins\",\r\n    price: 300,\r\n    times: [\"7:00 AM\", \"9:00 AM\", \"11:00 AM\", \"1:00 PM\", \"3:00 PM\"],\r\n    availability: { \"7:00 AM\": 5, \"9:00 AM\": 9, \"11:00 AM\": 14, \"1:00 PM\": 6, \"3:00 PM\": 1 }\r\n  }\r\n];\r\n\r\n// Bus seat layout (40 seats)\r\nconst generateSeats = () => {\r\n  const seats = [];\r\n  for (let i = 1; i <= 40; i++) {\r\n    const row = Math.ceil(i / 4);\r\n    const position = ((i - 1) % 4) + 1;\r\n    const seatNumber = `${String.fromCharCode(65 + Math.floor((i - 1) / 4))}${position}`;\r\n    seats.push({\r\n      number: seatNumber,\r\n      isAvailable: Math.random() > 0.3, // 70% availability\r\n      price: Math.random() > 0.8 ? 'premium' : 'regular'\r\n    });\r\n  }\r\n  return seats;\r\n};\r\n\r\nexport default function StudentBooking() {\r\n  const [step, setStep] = useState(1);\r\n  const [selectedRoute, setSelectedRoute] = useState<typeof routes[0] | null>(null);\r\n  const [selectedDate, setSelectedDate] = useState<Date>();\r\n  const [selectedTime, setSelectedTime] = useState<string>('');\r\n  const [selectedSeat, setSelectedSeat] = useState<string>('');\r\n  const [seats, setSeats] = useState(generateSeats());\r\n  const [passengerInfo, setPassengerInfo] = useState({\r\n    name: '',\r\n    email: '',\r\n    phone: ''\r\n  });\r\n  const [isBooking, setIsBooking] = useState(false);\r\n  const { toast } = useToast();\r\n\r\n  const handleBooking = async () => {\r\n    setIsBooking(true);\r\n    await new Promise(resolve => setTimeout(resolve, 2000));\r\n    \r\n    toast({\r\n      title: \"Booking Confirmed! 🎉\",\r\n      description: `Your seat ${selectedSeat} has been reserved for ${selectedDate && format(selectedDate, 'MMM dd, yyyy')} at ${selectedTime}.`\r\n    });\r\n\r\n    setIsBooking(false);\r\n    setStep(5);\r\n  };\r\n\r\n  if (step === 5) {\r\n    return (\r\n      <div className=\"h-screen bg-white flex items-center justify-center\">\r\n        <div className=\"max-w-md w-full mx-auto text-center space-y-6 p-6\">\r\n          <div className=\"w-20 h-20 bg-green-100 rounded-full flex items-center justify-center mx-auto\">\r\n            <CheckCircle2 className=\"w-10 h-10 text-green-600\" />\r\n          </div>\r\n          <div>\r\n            <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Booking Confirmed!</h1>\r\n            <p className=\"text-gray-600\">Your bus seat has been successfully reserved.</p>\r\n          </div>\r\n          \r\n          <Card>\r\n            <CardContent className=\"p-6 space-y-3\">\r\n              <div className=\"flex justify-between\">\r\n                <span className=\"text-gray-600\">Route:</span>\r\n                <span className=\"font-semibold\">{selectedRoute?.name}</span>\r\n              </div>\r\n              <div className=\"flex justify-between\">\r\n                <span className=\"text-gray-600\">Date:</span>\r\n                <span className=\"font-semibold\">\r\n                  {selectedDate && format(selectedDate, 'MMM dd, yyyy')}\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between\">\r\n                <span className=\"text-gray-600\">Time:</span>\r\n                <span className=\"font-semibold\">{selectedTime}</span>\r\n              </div>\r\n              <div className=\"flex justify-between\">\r\n                <span className=\"text-gray-600\">Seat:</span>\r\n                <span className=\"font-semibold\">{selectedSeat}</span>\r\n              </div>\r\n              <div className=\"flex justify-between\">\r\n                <span className=\"text-gray-600\">Price:</span>\r\n                <span className=\"font-semibold text-green-600\">₦{selectedRoute?.price.toLocaleString()}</span>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n          \r\n          <div className=\"flex gap-3\">\r\n            <Button asChild className=\"flex-1\">\r\n              <Link href=\"/student/dashboard\">Back to Dashboard</Link>\r\n            </Button>\r\n            <Button variant=\"outline\" onClick={() => setStep(1)}>\r\n              Book Another\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"h-full bg-white flex flex-col\">\r\n\r\n      {/* Fixed Header */}\r\n      <div className=\"bg-blue-600 text-white p-3 shadow-lg\">\r\n        <div className=\"max-w-7xl mx-auto flex items-center justify-between\">\r\n          <div>\r\n            <h1 className=\"text-2xl font-bold\">Book Your Trip</h1>\r\n            <p className=\"text-blue-200 text-sm\">Step {step} of 4</p>\r\n          </div>\r\n          <Button asChild variant=\"outline\" className=\"border-white text-white hover:bg-white hover:text-blue-600\">\r\n            <Link href=\"/student/dashboard\">\r\n              <ArrowLeft className=\"h-4 w-4 mr-2\" />\r\n              Back\r\n            </Link>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Progress Bar */}\r\n      <div className=\"bg-gray-100 p-3\">\r\n        <div className=\"max-w-7xl mx-auto\">\r\n          <div className=\"flex items-center justify-center space-x-4\">\r\n            {[1, 2, 3, 4].map((stepNumber) => (\r\n              <div key={stepNumber} className=\"flex items-center\">\r\n                <div className={`w-8 h-8 rounded-full flex items-center justify-center text-sm font-semibold ${\r\n                  step >= stepNumber ? 'bg-blue-600 text-white' : 'bg-gray-300 text-gray-600'\r\n                }`}>\r\n                  {stepNumber}\r\n                </div>\r\n                {stepNumber < 4 && (\r\n                  <div className={`w-16 h-1 mx-2 ${step > stepNumber ? 'bg-blue-600' : 'bg-gray-300'}`} />\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"flex justify-center mt-2 text-sm text-gray-600\">\r\n            <div className=\"grid grid-cols-4 gap-16 text-center\">\r\n              <span className={step >= 1 ? 'text-blue-600 font-medium' : ''}>Choose Route</span>\r\n              <span className={step >= 2 ? 'text-blue-600 font-medium' : ''}>Date & Time</span>\r\n              <span className={step >= 3 ? 'text-blue-600 font-medium' : ''}>Select Seat</span>\r\n              <span className={step >= 4 ? 'text-blue-600 font-medium' : ''}>Details</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Content */}\r\n      <div className=\"flex-1 p-3 overflow-auto\">\r\n        <div className=\"max-w-7xl mx-auto h-full\">\r\n          \r\n          {/* Step 1: Choose Route */}\r\n          {step === 1 && (\r\n            <div className=\"space-y-4\">\r\n              <h2 className=\"text-xl font-bold\">Choose Your Route</h2>\r\n              \r\n              <div className=\"grid gap-4\">\r\n                {routes.map((route) => (\r\n                  <Card key={route.id} className=\"cursor-pointer hover:shadow-md transition-shadow border-l-4 border-l-blue-500\" \r\n                        onClick={() => { setSelectedRoute(route); setStep(2); }}>\r\n                    <CardContent className=\"p-6\">\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <div className=\"flex-1\">\r\n                          <h3 className=\"text-lg font-semibold mb-2\">{route.name}</h3>\r\n                          <div className=\"grid grid-cols-4 gap-4 text-sm text-gray-600\">\r\n                            <div className=\"flex items-center gap-1\">\r\n                              <MapPin className=\"w-4 h-4\" />\r\n                              <span>{route.from}</span>\r\n                            </div>\r\n                            <div className=\"flex items-center gap-1\">\r\n                              <ArrowRight className=\"w-4 h-4\" />\r\n                              <span>{route.to}</span>\r\n                            </div>\r\n                            <div className=\"flex items-center gap-1\">\r\n                              <Clock className=\"w-4 h-4\" />\r\n                              <span>{route.duration}</span>\r\n                            </div>\r\n                            <div className=\"text-right\">\r\n                              <span className=\"font-semibold text-green-600 text-lg\">₦{route.price.toLocaleString()}</span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <Button className=\"ml-4\">\r\n                          Select <ArrowRight className=\"w-4 h-4 ml-1\" />\r\n                        </Button>\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Step 2: Date & Time */}\r\n          {step === 2 && selectedRoute && (\r\n            <div className=\"grid grid-cols-2 gap-8 h-full\">\r\n              \r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle>Pick Date</CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <Calendar\r\n                    mode=\"single\"\r\n                    selected={selectedDate}\r\n                    onSelect={setSelectedDate}\r\n                    disabled={(date) => date < new Date()}\r\n                    className=\"w-full\"\r\n                  />\r\n                </CardContent>\r\n              </Card>\r\n\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle>Available Times</CardTitle>\r\n                  <p className=\"text-sm text-gray-600\">{selectedRoute.name}</p>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  {selectedDate ? (\r\n                    <div className=\"space-y-2\">\r\n                      {selectedRoute.times.map((time) => {\r\n                        const available = selectedRoute.availability[time];\r\n                        return (\r\n                          <button\r\n                            key={time}\r\n                            onClick={() => { setSelectedTime(time); setStep(3); }}\r\n                            disabled={available === 0}\r\n                            className=\"w-full flex items-center justify-between p-3 border rounded-lg hover:bg-blue-50 transition-colors disabled:opacity-50\"\r\n                          >\r\n                            <div className=\"flex items-center gap-2\">\r\n                              <Clock className=\"w-4 h-4\" />\r\n                              <span className=\"font-medium\">{time}</span>\r\n                            </div>\r\n                            <Badge variant={available > 5 ? 'default' : available > 0 ? 'secondary' : 'destructive'}>\r\n                              {available > 0 ? `${available} seats` : 'Full'}\r\n                            </Badge>\r\n                          </button>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"text-center py-8 text-gray-500\">\r\n                      <CalendarIcon className=\"w-12 h-12 mx-auto mb-4 opacity-50\" />\r\n                      <p>Select a date first</p>\r\n                    </div>\r\n                  )}\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n          )}\r\n\r\n          {/* Step 3: Seat Selection */}\r\n          {step === 3 && selectedRoute && selectedDate && selectedTime && (\r\n            <div className=\"space-y-6\">\r\n              <div className=\"text-center\">\r\n                <h2 className=\"text-2xl font-bold mb-2\">Choose Your Seat</h2>\r\n                <p className=\"text-gray-600\">Select your preferred seat for the journey</p>\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n                {/* Bus Layout */}\r\n                <Card className=\"lg:col-span-2\">\r\n                  <CardHeader className=\"bg-gradient-to-r from-blue-500 to-blue-600 text-white\">\r\n                    <CardTitle className=\"flex items-center gap-2\">\r\n                      <Bus className=\"h-5 w-5\" />\r\n                      Bus Layout - {selectedRoute.name}\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"p-6\">\r\n                    <div className=\"bg-gray-100 rounded-lg p-4 mb-4\">\r\n                      <div className=\"flex items-center justify-between text-sm mb-4\">\r\n                        <span className=\"font-medium\">Front of Bus</span>\r\n                        <span className=\"text-gray-600\">Driver</span>\r\n                      </div>\r\n\r\n                      {/* Seat Grid */}\r\n                      <div className=\"grid grid-cols-4 gap-2 max-w-md mx-auto\">\r\n                        {seats.map((seat, index) => (\r\n                          <button\r\n                            key={seat.number}\r\n                            onClick={() => seat.isAvailable && setSelectedSeat(seat.number)}\r\n                            disabled={!seat.isAvailable}\r\n                            className={`\r\n                              h-12 w-12 rounded-lg border-2 text-xs font-medium transition-all\r\n                              ${!seat.isAvailable\r\n                                ? 'bg-gray-300 text-gray-500 cursor-not-allowed border-gray-300'\r\n                                : selectedSeat === seat.number\r\n                                  ? 'bg-blue-500 text-white border-blue-600 shadow-lg'\r\n                                  : seat.price === 'premium'\r\n                                    ? 'bg-yellow-50 text-yellow-700 border-yellow-300 hover:bg-yellow-100'\r\n                                    : 'bg-green-50 text-green-700 border-green-300 hover:bg-green-100'\r\n                              }\r\n                            `}\r\n                          >\r\n                            {seat.isAvailable ? seat.number : 'X'}\r\n                          </button>\r\n                        ))}\r\n                      </div>\r\n\r\n                      {/* Legend */}\r\n                      <div className=\"flex justify-center gap-6 mt-4 text-xs\">\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <div className=\"w-4 h-4 bg-green-100 border border-green-300 rounded\"></div>\r\n                          <span>Available</span>\r\n                        </div>\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <div className=\"w-4 h-4 bg-yellow-100 border border-yellow-300 rounded\"></div>\r\n                          <span>Premium</span>\r\n                        </div>\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <div className=\"w-4 h-4 bg-blue-500 rounded\"></div>\r\n                          <span>Selected</span>\r\n                        </div>\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <div className=\"w-4 h-4 bg-gray-300 rounded\"></div>\r\n                          <span>Occupied</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {selectedSeat && (\r\n                      <Button onClick={() => setStep(4)} className=\"w-full\" size=\"lg\">\r\n                        Continue with Seat {selectedSeat}\r\n                        <ArrowRight className=\"h-4 w-4 ml-2\" />\r\n                      </Button>\r\n                    )}\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                {/* Seat Info */}\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Trip Summary</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-4\">\r\n                    <div>\r\n                      <Label className=\"text-sm text-gray-600\">Route</Label>\r\n                      <p className=\"font-semibold\">{selectedRoute.name}</p>\r\n                      <p className=\"text-sm text-gray-600\">{selectedRoute.from} → {selectedRoute.to}</p>\r\n                    </div>\r\n\r\n                    <div>\r\n                      <Label className=\"text-sm text-gray-600\">Date & Time</Label>\r\n                      <p className=\"font-semibold\">\r\n                        {selectedDate && format(selectedDate, 'MMM dd, yyyy')}\r\n                      </p>\r\n                      <p className=\"text-sm text-gray-600\">{selectedTime}</p>\r\n                    </div>\r\n\r\n                    {selectedSeat && (\r\n                      <>\r\n                        <div>\r\n                          <Label className=\"text-sm text-gray-600\">Selected Seat</Label>\r\n                          <p className=\"font-semibold text-blue-600\">{selectedSeat}</p>\r\n                          <Badge variant={seats.find(s => s.number === selectedSeat)?.price === 'premium' ? 'secondary' : 'default'} className=\"text-xs\">\r\n                            {seats.find(s => s.number === selectedSeat)?.price === 'premium' ? 'Premium Seat' : 'Regular Seat'}\r\n                          </Badge>\r\n                        </div>\r\n\r\n                        <div className=\"pt-4 border-t\">\r\n                          <div className=\"flex justify-between items-center\">\r\n                            <Label>Total Price</Label>\r\n                            <p className=\"text-xl font-bold text-green-600\">\r\n                              ₦{selectedRoute.price.toLocaleString()}\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  </CardContent>\r\n                </Card>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Step 4: Passenger Details */}\r\n          {step === 4 && (\r\n            <div className=\"grid grid-cols-3 gap-8\">\r\n              \r\n              <Card className=\"col-span-2\">\r\n                <CardHeader>\r\n                  <CardTitle>Passenger Information</CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-4\">\r\n                  <div className=\"grid grid-cols-2 gap-4\">\r\n                    <div className=\"space-y-2\">\r\n                      <Label>Full Name *</Label>\r\n                      <div className=\"relative\">\r\n                        <User className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\r\n                        <Input\r\n                          placeholder=\"Enter your full name\"\r\n                          value={passengerInfo.name}\r\n                          onChange={(e) => setPassengerInfo(prev => ({ ...prev, name: e.target.value }))}\r\n                          className=\"pl-10\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"space-y-2\">\r\n                      <Label>Email *</Label>\r\n                      <div className=\"relative\">\r\n                        <Mail className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\r\n                        <Input\r\n                          type=\"email\"\r\n                          placeholder=\"your@email.com\"\r\n                          value={passengerInfo.email}\r\n                          onChange={(e) => setPassengerInfo(prev => ({ ...prev, email: e.target.value }))}\r\n                          className=\"pl-10\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"space-y-2\">\r\n                    <Label>Phone Number</Label>\r\n                    <div className=\"relative\">\r\n                      <Phone className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\r\n                      <Input\r\n                        placeholder=\"(123) 456-7890\"\r\n                        value={passengerInfo.phone}\r\n                        onChange={(e) => setPassengerInfo(prev => ({ ...prev, phone: e.target.value }))}\r\n                        className=\"pl-10\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <Button \r\n                    onClick={handleBooking} \r\n                    className=\"w-full mt-6\" \r\n                    size=\"lg\"\r\n                    disabled={isBooking || !passengerInfo.name || !passengerInfo.email || !selectedSeat}\r\n                  >\r\n                    {isBooking ? \"Processing...\" : `Complete Booking - ₦${selectedRoute?.price.toLocaleString()}`}\r\n                  </Button>\r\n                </CardContent>\r\n              </Card>\r\n\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle>Booking Summary</CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-4\">\r\n                  <div>\r\n                    <Label className=\"text-sm text-gray-600\">Route</Label>\r\n                    <p className=\"font-semibold\">{selectedRoute?.name}</p>\r\n                  </div>\r\n                  \r\n                  <div>\r\n                    <Label className=\"text-sm text-gray-600\">Date & Time</Label>\r\n                    <p className=\"font-semibold\">\r\n                      {selectedDate && format(selectedDate, 'MMM dd, yyyy')}\r\n                    </p>\r\n                    <p className=\"text-sm text-gray-600\">{selectedTime}</p>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <Label className=\"text-sm text-gray-600\">Selected Seat</Label>\r\n                    <p className=\"font-semibold text-blue-600\">{selectedSeat}</p>\r\n                    <Badge variant={seats.find(s => s.number === selectedSeat)?.price === 'premium' ? 'secondary' : 'default'} className=\"text-xs mt-1\">\r\n                      {seats.find(s => s.number === selectedSeat)?.price === 'premium' ? 'Premium Seat' : 'Regular Seat'}\r\n                    </Badge>\r\n                  </div>\r\n\r\n                  <div className=\"pt-4 border-t\">\r\n                    <div className=\"flex justify-between items-center\">\r\n                      <Label>Total Price</Label>\r\n                      <p className=\"text-2xl font-bold text-green-600\">\r\n                        ₦{selectedRoute?.price.toLocaleString()}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}